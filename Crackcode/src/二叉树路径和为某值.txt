import java.util.ArrayList;
/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    
    public ArrayList<ArrayList<Integer>> FindPath(TreeNode root,int target) {
        ArrayList<ArrayList<Integer>> result = new ArrayList();
        if (root == null) {
            return result;
        }
        ArrayList<Integer> stack = new ArrayList();
        FindPath(root, target, 0, stack, result);
        return result;
    }
    
    private void FindPath(TreeNode node, int target, int sum, ArrayList<Integer> stack, ArrayList<ArrayList<Integer>> result) {
        sum = node.val + sum;
        stack.add(node.val);
        if (node.right == null && node.left == null) {
            if (sum == target) {
                result.add((ArrayList<Integer>)stack.clone());
            }
        }
        if (node.left != null) {
            FindPath(node.left, target, sum, stack, result);
        }
        if (node.right != null) {
            FindPath(node.right, target, sum, stack, result);
        }
        sum = sum - node.val;
        stack.remove(stack.size() - 1);
    }
}