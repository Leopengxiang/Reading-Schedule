import java.util.ArrayList;
import java.util.Deque;
import java.util.ArrayDeque;
/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    public ArrayList<Integer> PrintFromTopToBottom(TreeNode root) {
        if (root == null) {
            return new ArrayList();
        }
        Deque<TreeNode> queue = new ArrayDeque();
        ArrayList<Integer> result = new ArrayList();
        queue.add(root);
        while (!queue.isEmpty()) {
            TreeNode  poped = queue.remove();
            result.add(poped.val);
            if (poped.left != null) {
                queue.add(poped.left);
            } 
            if (poped.right != null) {
                queue.add(poped.right);
            }
        }
        return result;
    }
}